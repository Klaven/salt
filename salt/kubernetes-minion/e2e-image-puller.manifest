# e2e-image-puller seeds nodes in an e2e cluster with test images.
apiVersion: v1
kind: Pod
metadata:
  name: e2e-image-puller
  namespace: kube-system
  labels:
    name: e2e-image-puller
spec:
  containers:
  - name: image-puller
    resources:
      requests:
        cpu: 100m
      limits:
        cpu: 100m
    image: opensuse/amd64:leap
    ##########################################################################
    # generate this list with:
    #
    # grep -Iiroh "gcr.io/google_.*" test/e2e | sed -e "s/[,\")}]//g" | awk '{print $1}' | sort | uniq
    #
    # however, some pods are not caught with this (ie, "clusterapi-tester")...
    # so you should also run `docker images` in the minions after running
    # the tests and merge both lists
    ##########################################################################
    command:
    - /bin/sh
    - -c
    - "
      zypper -n in --no-recommends docker;
      for i in
      gcr.io/google_containers/busybox:1.24
      gcr.io/google_containers/busybox:latest
      gcr.io/google_containers/clusterapi-tester:1.0
      gcr.io/google_containers/dnsutils:e2e
      gcr.io/google_containers/echoserver:1.4
      gcr.io/google_containers/eptest:0.1
      gcr.io/google_containers/fakegitserver:0.1
      gcr.io/google_containers/galera-install:0.1
      gcr.io/google_containers/hostexec:1.2
      gcr.io/google_containers/iperf:e2e
      gcr.io/google_containers/jessie-dnsutils:e2e
      gcr.io/google_containers/kube-nethealth-amd64:1.0
      gcr.io/google_containers/liveness:e2e
      gcr.io/google_containers/mounttest:0.2
      gcr.io/google_containers/mounttest:0.5
      gcr.io/google_containers/mounttest:0.6
      gcr.io/google_containers/mounttest:0.7
      gcr.io/google_containers/mounttest-user:0.3
      gcr.io/google_containers/mysql-galera:e2e
      gcr.io/google_containers/mysql-healthz:1.0
      gcr.io/google_containers/netexec:1.4
      gcr.io/google_containers/netexec:1.5
      gcr.io/google_containers/nettest:1.7
      gcr.io/google_containers/nettest:1.8
      gcr.io/google_containers/nettest:1.9
      gcr.io/google_containers/nginx:1.7.9
      gcr.io/google_containers/nginx-slim:0.5
      gcr.io/google_containers/node-problem-detector:v0.1
      gcr.io/google_containers/n-way-http:1.0
      gcr.io/google_containers/pause
      gcr.io/google_containers/pause:2.0
      gcr.io/google_containers/pause-amd64:3.0
      gcr.io/google_containers/porter:cd5cb5791ebaa8641955f0e8c2a9bed669b1eaab
      gcr.io/google_containers/portforwardtester:1.0
      gcr.io/google_containers/redis:e2e
      gcr.io/google_containers/redis-install-3.2.0:e2e
      gcr.io/google_containers/resource_consumer:beta4
      gcr.io/google_containers/resource_consumer/controller:beta4
      gcr.io/google_containers/serve_hostname:v1.4
      gcr.io/google_containers/servicelb:0.1
      gcr.io/google_containers/test-webserver:e2e
      gcr.io/google_containers/ubuntu:14.04
      gcr.io/google_containers/update-demo:kitten
      gcr.io/google_containers/update-demo:nautilus
      gcr.io/google_containers/volume-ceph:0.1
      gcr.io/google_containers/volume-gluster:0.2
      gcr.io/google_containers/volume-iscsi:0.1
      gcr.io/google_containers/volume-nfs:0.6
      gcr.io/google_containers/volume-rbd:0.1
      gcr.io/google_containers/zookeeper-install-3.5.0-alpha:e2e
      gcr.io/google_samples/gb-redisslave:v1 ;
      do
          echo $(date '+%X') pulling $i ;
          docker pull $i 1>/dev/null ;
      done; exit 0 ; "
    securityContext:
      privileged: true
    volumeMounts:
    - mountPath: /var/run/docker.sock
      name: socket
  # Add a container that runs a health-check
  - name: nethealth-check
    resources:
      requests:
        cpu: 100m
      limits:
        cpu: 100m
    image:  gcr.io/google_containers/kube-nethealth-amd64:1.0
    command:
    - /bin/sh
    - -c
    - "/usr/bin/nethealth || true"
  volumes:
  - hostPath:
      path: /var/run/docker.sock
    name: socket
  # This pod is really fire-and-forget.
  restartPolicy: Never
  # This pod needs hostNetworking for true VM perf measurement as well as avoiding cbr0 issues
  hostNetwork: true
