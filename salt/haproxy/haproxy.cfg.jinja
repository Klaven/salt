{%- if "kube-master" in salt['grains.get']('roles', []) -%}
{%- set bind_ip = "0.0.0.0" -%}
{%- else -%}
{%- set bind_ip = "127.0.0.1" -%}
{%- endif -%}
global
        log /dev/log    local0
        log /dev/log    local1 notice

defaults
        log     global
        mode    tcp
        option  tcplog
        option  dontlognull
        timeout connect 5000
        timeout client 120000
        timeout server 120000

# Listen on the standard Kube-API Public port, 6443 by default, and proxy to the masters on
# the Kube-API internal port, 6444 by default.
listen kubernetes-master
        bind {{ bind_ip }}:{{ pillar['api']['ssl_port'] }}
        mode tcp
        default-server inter 10s fall 2
        balance roundrobin
        option redispatch
        option httpchk GET /healthz

{%- for minion_id, nodename in salt['mine.get']('roles:kube-master', 'nodename', 'grain').items() %}
        server master-{{ nodename }} {{ nodename }}.{{ pillar['internal_infra_domain'] }}:{{ pillar['api']['int_ssl_port'] }} check check-ssl port {{ pillar['api']['int_ssl_port'] }} verify none
{% endfor -%}

{%- if "admin" in salt['grains.get']('roles', []) %}
# Velum should be able to access Kube API and Dex service as well to get kubeconfig
listen kubernetes-dex
        bind {{ bind_ip }}:{{ pillar['dex']['node_port'] }}
        mode tcp
        default-server inter 10s fall 2
        balance roundrobin
        option redispatch
        option httpchk GET /healthz

{%- for minion_id, nodename in salt['mine.get']('roles:kube-master', 'nodename', 'grain').items() %}
        server master-{{ nodename }} {{ nodename }}.{{ pillar['internal_infra_domain'] }}:{{ pillar['dex']['node_port'] }} check check-ssl port {{ pillar['dex']['node_port'] }} verify none
{% endfor %}

listen velum
        bind 0.0.0.0:80
        bind 0.0.0.0:443 ssl crt /etc/pki/velum.pem ca-file /etc/pki/ca.crt
        mode http
        acl path_autoyast path_reg ^/autoyast$
        option forwardfor
        http-request set-header X-Forwarded-Proto https
        redirect scheme https code 302 if !{ ssl_fc } !path_autoyast
        default-server inter 10s fall 3
        balance roundrobin
        server velum unix@/var/run/puma/dashboard.sock

listen velum-api
        bind 127.0.0.1:444 ssl crt /etc/pki/velum.pem ca-file /etc/pki/ca.crt
        mode http
        option forwardfor
        http-request set-header X-Forwarded-Proto https
        default-server inter 10s fall 3
        balance roundrobin
        server velum unix@/var/run/puma/api.sock
{% endif -%}
